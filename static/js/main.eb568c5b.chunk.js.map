{"version":3,"sources":["asset/logo.svg","Components/SearchBar/SearchBar.jsx","Components/Nav/Nav.jsx","Components/Card/Card.jsx","Components/Cards/Cards.jsx","Components/About/About.jsx","Components/Ciudad/Ciudad.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["SearchBar","onSearch","useState","city","setCity","redir","useNavigate","className","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","Nav","to","id","src","Logo","width","height","alt","Card","min","max","name","img","onClose","style","setStyle","onClick","Cards","cities","map","c","About","Ciudad","onFilter","useParams","ciudadId","temp","weather","wind","clouds","latitud","longitud","App","setCities","useEffect","citiesStorage","JSON","parse","window","localStorage","getItem","citiesSaveLocalStorage","setItem","stringify","ciudad","swal","title","icon","button","fetch","then","r","json","recurso","undefined","main","Math","round","temp_min","temp_max","speed","all","coord","lat","lon","find","oldCities","path","element","filter","parseInt","length","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eb568c5b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { useState } from \"react\";\r\nimport  {useNavigate }  from 'react-router-dom';\r\nimport \"./SearchBar.css\";\r\n\r\nexport default function SearchBar({ onSearch }) {\r\n  const [city, setCity] = useState(\"\");\r\n  const redir = useNavigate()\r\n\r\n\r\n  return (\r\n    <form\r\n      className=\"d-flex\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        onSearch(city);\r\n        setCity(\"\");\r\n        redir('./')\r\n      }}\r\n    >\r\n      <input\r\n        className=\"form-control mx-2\"\r\n        type=\"text\"\r\n        placeholder=\"Ciudad...\"\r\n        value={city}\r\n        onChange={(e) => setCity(e.target.value)}\r\n      />\r\n        <input\r\n          className=\"btn btn-primary me-2 botonSearch\"\r\n          type=\"submit\"\r\n          value=\"Agregar\"\r\n        />\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Logo from \"../../asset/logo.svg\";\r\nimport SearchBar from \"../SearchBar/SearchBar.jsx\";\r\nimport \"./Nav.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav({ onSearch}) {\r\n\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-dark navegacion\">\r\n      <Link className=\"linkCabecera\" to=\"/\">\r\n        <span className=\"navbar-brand\">\r\n          <img\r\n            id=\"logo\"\r\n            src={Logo}\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"\"\r\n          />\r\n          <span className=\"cabecera\">Heredia Lucas - Clima App</span>\r\n        </span>\r\n      </Link>\r\n      <div className='d-flex justify-content-center py-3 navSeparador'>\r\n        <Link className=\"linkHome mx-2\" to=\"/\">\r\n          <span>Ciudades</span>\r\n        </Link>\r\n        <Link className=\"linkHome mx-2\" to=\"/about\">\r\n          <span>Acerca del Proyecto</span>\r\n        </Link>\r\n      </div>\r\n      <SearchBar onSearch={onSearch} />\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState } from \"react\";\r\nimport \"./Card.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Card({ min, max, name, img, onClose, id }) {\r\n  const [style, setStyle] = useState(true);\r\n\r\n  function onChange() {\r\n    style ? setStyle(false) : setStyle(true);\r\n  }\r\n\r\n  return (\r\n    <div className={style ? \"card\" : \"cardNew\"}>\r\n      <div id=\"changeIcon\" className=\"container\">\r\n        <button onClick={onChange} className={style ? \"botonChange\" : \"botonChange2\"}>\r\n        </button>\r\n      </div>\r\n      <Link className=\"cartas\" to={`/ciudad/${id}`}>\r\n        <div className=\"card-body d-flex flex-column align-content-center\">\r\n          <img\r\n            className=\"iconoClima\"\r\n            src={\"http://openweathermap.org/img/wn/\" + img + \"@2x.png\"}\r\n            width=\"80\"\r\n            height=\"80\"\r\n            alt=\"\"\r\n          />\r\n          <h5 className=\"card-title\">{name}</h5>\r\n          <div className=\" dataCard\">\r\n            <div className=\" col-md-6 col-lg-6 cartasDatos\">\r\n              <p className=\"cartasDatos-p1\">Min</p>\r\n              <p className=\"cartasDatos-p2\">{min}°</p>\r\n            </div>\r\n            <div className=\" col-md-6 col-lg-6 cartasDatos\">\r\n              <p className=\"cartasDatos-p1\">Max</p>\r\n              <p className=\"cartasDatos-p2\">{max}°</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n      <div id=\"closeIcon\" className=\"container\">\r\n        <button onClick={onClose} className={style ? \"boton\" : \"boton2\"}>\r\n          X\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Cards.css';\r\n\r\nimport Card from '../Card/Card.jsx';\r\n\r\nexport default function Cards({cities, onClose}) {\r\n  return (\r\n    <div className='cards'>\r\n      {(!cities) ? \"No hay ciudades que mostrar\" :\r\n      cities.map(c => <Card\r\n          key={c.id}\r\n          max={c.max}\r\n          min={c.min}\r\n          name={c.name}\r\n          img={c.img}\r\n          onClose={() => onClose(c.id)}\r\n          id={c.id}\r\n        /> )}\r\n    </div>\r\n  );\r\n}\r\n","import './About.css'\r\n\r\nexport default function About () {\r\n    return (\r\n        <p className='containerAbout'>\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Soluta exercitationem aliquid illum. Neque consectetur quam odio ipsum, rem vel soluta assumenda accusantium, iure placeat libero rerum excepturi. Harum, necessitatibus consequuntur?\r\n        </p>\r\n    )\r\n}","import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport './Ciudad.css'\r\n\r\nexport default function Ciudad({onFilter}) {\r\n    const {ciudadId} = useParams();\r\n    const city = onFilter(ciudadId) \r\n\r\n\r\n    return (\r\n        <div className=\"containerCiudad\">\r\n                <div className=\"contentCardTitle\">\r\n                    <div className=\"titleCard\">\r\n\r\n                    <h2 className=\"divTitleCard\">{city.name}</h2>\r\n                    </div>\r\n                    <div className=\"ciudadContent\">\r\n                        <div className=\"ciudadLeft\">\r\n                            <p className=\"descriptionCard\" >Temperatura: {city.temp} ºC</p>\r\n                            <p className=\"descriptionCard\" >Clima: {city.weather}</p>\r\n                            <p className=\"descriptionCard\" >Viento: {city.wind} km/h</p>\r\n                        </div>\r\n                        <div className=\"ciudadRight\">\r\n                            <p className=\"descriptionCard\" >Cantidad de nubes: {city.clouds}</p>\r\n                            <p className=\"descriptionCard\" >Latitud: {city.latitud}º</p>\r\n                            <p className=\"descriptionCard\" >Longitud: {city.longitud}º</p>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport swal from \"sweetalert\";\n\nimport \"./App.css\";\nimport Nav from \"./Components/Nav/Nav.jsx\";\nimport Cards from \"./Components/Cards/Cards.jsx\";\nimport About from \"./Components/About/About\";\nimport Ciudad from \"./Components/Ciudad/Ciudad.jsx\";\n\nconst apiKey = \"4ae2636d8dfbdc3044bede63951a019b\";\n\nfunction App() {\n  const [cities, setCities] = useState([]);\n  // const [style, setStyle] = useState(true);\n\n  const citiesSaveLocalStorage = () => {\n    const citiesStorage = JSON.parse(window.localStorage.getItem(\"citieSave\"));\n    setCities(citiesStorage);\n  };\n  useEffect(() => {\n    citiesSaveLocalStorage();\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"citieSave\", JSON.stringify(cities));\n  }, [cities]);\n\n  function onClose(id) {\n    setCities((oldCities) => oldCities.filter((c) => c.id !== id));\n    swal({\n      title: \"Ciudad eliminada correctamente\",\n      icon: \"success\",\n      button: {\n        className: \"botonSwal\",\n      },\n    });\n  }\n\n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    if (ciudad === \"\")\n      return swal({\n        title: \"Debe escribir una ciudad\",\n        icon: \"warning\",\n        button: {\n          className: \"botonSwal\",\n        },\n      });\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`\n    )\n      .then((r) => r.json())\n      .then((recurso) => {\n        if (recurso.main !== undefined) {\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon,\n          };\n          let aux = cities && cities.find((c) => c.id === ciudad.id);\n          if (aux) {\n            swal({\n              title: \"Esta ciudad ya se encuentra creada\",\n              icon: \"warning\",\n              button: {\n                className: \"botonSwal\",\n              },\n            });\n          } else {\n            setCities((oldCities) =>[...oldCities, ciudad])\n            swal({\n              title: \"Ciudad agregada correctamente\",\n              icon: \"success\",\n              button: {\n                className: \"botonSwal\",\n              },\n            });\n          }\n        } else {\n          swal({\n            title: \"Ciudad no encontrada\",\n            icon: \"error\",\n            button: {\n              className: \"botonSwal\",\n            },\n          });\n        }\n      });\n  }\n\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter((c) => c.id === parseInt(ciudadId));\n    if (ciudad.length > 0) {\n      return ciudad[0];\n    } else {\n      return null;\n    }\n  }\n  return (\n    <>\n      <Nav onSearch={onSearch} />\n      <Routes>\n        <Route path=\"/about\" element={<About />} />\n        <Route\n          path=\"/\"\n          element={<Cards cities={cities} onClose={onClose} />}\n        />\n        <Route path=\"/ciudad/:ciudadId\" element={<Ciudad onFilter={onFilter} city={cities} />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <HashRouter basename='/'>\n    <App/>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}